apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.Env }}
  name: "{{ .Values.AppName}}-{{ .Values.Env}}"
  labels:
    app: "{{ .Values.AppName}}-{{ .Values.Env}}"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
        app: "{{ .Values.AppName}}-{{ .Values.Env}}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
  template:
    metadata:
      labels:
        app: "{{ .Values.AppName}}-{{ .Values.Env}}"
    spec:
      containers:
        - name: {{ .Values.AppName }}
          image: "aksrao1998/{{ .Values.AppName}}:{{.Values.Tag}}"
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
          ports:
            - name: http
            {{- if eq .Values.AppName "chat-app-be" }}
              containerPort: 3001
            {{- else }}
              containerPort: 3000
            {{- end }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
               port: 3000
          readinessProbe:
            tcpSocket:
               port: 3000
          resources:
            {{- toYaml .Values.containers.app.resources | nindent 12 }}
        - name: nginx
          image: {{.Values.containers.rproxy.image.name}}
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
          ports:
            - containerPort: 8080
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
          resources:
            {{- toYaml .Values.containers.rproxy.resources | nindent 12 }}
          volumeMounts:
            - name: "{{ .Values.AppName }}-{{.Values.Env}}-default-conf"
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: logs
              mountPath: /var/log/nginx/
      volumes:
        - name: logs
          emptyDir: {}
        - name: "{{ .Values.AppName }}-{{.Values.Env}}-default-conf" 
          configMap:
            name: "{{ .Values.AppName }}-{{.Values.Env}}-default.conf" 