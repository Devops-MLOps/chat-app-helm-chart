apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.Env }}
  name: "{{ .Values.AppName}}-{{ .Values.Env}}"
  labels:
    app: "{{ .Values.AppName}}-{{ .Values.Env}}"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      labels:
        app: "{{ .Values.AppName}}-{{ .Values.Env}}"
  template:
    metadata:
      labels:
        app: "{{ .Values.AppName}}-{{ .Values.Env}}"
    spec:
      containers:
        - name: {{ .Values.AppName }}
          image: "aksrao1998/{{ .Values.AppName}}-{{ .Values.Env}}-{{.Values.Tag}}"
          imagePullPolicy: {{ .Values.containers.app.image.pullPolicy }}
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
          ports:
            - name: http
            {{- if eq .Values.AppName "chat-app-be" }}
              containerPort: 3001
            {{- else }}
              containerPort: 3000
            {{- end }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.containers.app.resources | nindent 12 }}
        - name: rproxy
          image: {{.Values.containers.rproxy.image.name}}
          imagePullPolicy: {{ .Values.containers.rproxy.image.pullPolicy }}
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
          ports:
            - name: http
            {{- if eq .Values.AppName "chat-app-be" }}
              containerPort: 3001
            {{- else }}
              containerPort: 3000
            {{- end }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.containers.rproxy.resources | nindent 12 }}